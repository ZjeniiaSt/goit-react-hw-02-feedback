{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notofication.styled.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["SectionStyle","styled","section","SectionTitle","h2","Section","title","children","Container","div","StatisticsList","ul","StatisticsItem","li","Statistics","options","total","positivePercentage","Object","entries","map","key","value","Button","button","FeedbackOptions","onLeaveFeedback","keys","onClick","Message","p","Notification","message","App","state","good","neutral","bad","option","setState","prevState","values","this","reduce","acc","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEaA,EAAeC,IAAOC,QAAV,uIAQZC,EAAeF,IAAOG,GAAV,yI,OCOVC,I,MAAAA,EAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACP,EAAD,WACE,cAACG,EAAD,UAAeG,IACdC,M,QCLMC,EAAYP,IAAOQ,IAAV,mDAITC,EAAiBT,IAAOU,GAAV,wIAQdC,EAAiBX,IAAOY,GAAV,wZCWZC,I,IAAAA,EAtBf,YAA6D,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACpC,OACE,cAACT,EAAD,UACE,eAACE,EAAD,WACGQ,OAAOC,QAAQJ,GAASK,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC3B,eAACV,EAAD,WACGS,EADH,KACUC,IADWD,MAIvB,eAACT,EAAD,qBAAwBI,KACxB,eAACJ,EAAD,iCAAoCK,EAApC,cCXKT,EAAYP,IAAOQ,IAAV,4CAITc,EAAStB,IAAOuB,OAAV,48BCcJC,I,EAAAA,EAjBf,YAAwD,IAA7BV,EAA4B,EAA5BA,QAASW,EAAmB,EAAnBA,gBAClC,OACE,cAAC,EAAD,UACGR,OAAOS,KAAKZ,GAASK,KAAI,SAAAC,GAAG,OAC3B,cAACE,EAAD,CAAkBK,QAAS,kBAAMF,EAAgBL,IAAjD,SACGA,GADUA,SCLRQ,EAAU5B,IAAO6B,EAAV,4DCSLC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCGbC,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPX,gBAAkB,SAAAY,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAASE,EAAUF,GAAU,O,wDAIlC,WACE,OAAOpB,OAAOuB,OAAOC,KAAKR,OAAOS,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAMtB,IAAO,K,6CAGvE,WACE,OAAOuB,KAAKC,MAAOJ,KAAKR,MAAMC,KAAOO,KAAKK,qBAAwB,O,oBAGpE,WACE,OACE,qCACE,cAAC,EAAD,CAASzC,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBS,QAAS2B,KAAKR,MAAOR,gBAAiBgB,KAAKhB,oBAE9D,cAAC,EAAD,CAASpB,MAAM,aAAf,SACiC,IAA9BoC,KAAKK,qBACJ,cAAC,EAAD,CAAcf,QAAQ,sBAEtB,cAAC,EAAD,CACEjB,QAAS2B,KAAKR,MACdlB,MAAO0B,KAAKK,qBACZ9B,mBAAoByB,KAAKM,6C,GAlCrBC,aA2CHhB,I,MC7CfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a543b407.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const SectionStyle = styled.section`\r\n  padding: 20px;\r\n  border: 2px solid pink;\r\n  border-radius: 20px;\r\n  color: red;\r\n  text-align: center;\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n  margin-top: 0px;\r\n  margin-bottom: 0px;\r\n  padding-bottom: 20px;\r\n  font-weight: 700;\r\n  font-size: 26px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { SectionStyle, SectionTitle } from './Section.styled';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <SectionStyle>\r\n      <SectionTitle>{title}</SectionTitle>\r\n      {children}\r\n    </SectionStyle>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const StatisticsList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n`;\r\n\r\nexport const StatisticsItem = styled.li`\r\n  padding-bottom: 5px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  text-transform: uppercase;\r\n\r\n  :first-of-type {\r\n    color: #137708;\r\n  }\r\n\r\n  :nth-of-type(2) {\r\n    color: #d47c09;\r\n  }\r\n  :nth-of-type(3) {\r\n    color: #d40902;\r\n  }\r\n  :nth-of-type(4) {\r\n    color: pink;\r\n    padding-top: 10px;\r\n  }\r\n  :nth-of-type(5) {\r\n    color: red;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Container, StatisticsList, StatisticsItem } from './Statistics.styled';\r\n\r\nfunction Statistics({ options, total, positivePercentage }) {\r\n  return (\r\n    <Container>\r\n      <StatisticsList>\r\n        {Object.entries(options).map(([key, value]) => (\r\n          <StatisticsItem key={key}>\r\n            {key}: {value}\r\n          </StatisticsItem>\r\n        ))}\r\n        <StatisticsItem>Total: {total}</StatisticsItem>\r\n        <StatisticsItem>Positive feedback: {positivePercentage} %</StatisticsItem>\r\n      </StatisticsList>\r\n    </Container>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  align-content: center;\r\n  align-items: center;\r\n  min-width: 130px;\r\n  height: 40px;\r\n  border: none;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  padding: 10px 25px;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: 500;\r\n  text-transform: capitalize;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  margin-left: 15px;\r\n\r\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5), 7px 7px 20px 0px rgba(0, 0, 0, 0.1),\r\n    4px 4px 5px 0px rgba(0, 0, 0, 0.1);\r\n  outline: none;\r\n\r\n  :nth-of-type(1) {\r\n    background-color: #137708;\r\n    border: 1px solid #137708;\r\n  }\r\n\r\n  :nth-of-type(2) {\r\n    background-color: #d47c09;\r\n    border: 1px solid #d47c09;\r\n  }\r\n  :nth-of-type(3) {\r\n    background-color: #d40902;\r\n    border: 1px solid #d40902;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    color: #000;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Container, Button } from './FeedbackOptions.styled';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <Container>\r\n      {Object.keys(options).map(key => (\r\n        <Button key={key} onClick={() => onLeaveFeedback(key)}>\r\n          {key}\r\n        </Button>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Message = styled.p`\r\n  margin: 20px;\r\n  color: red;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Message } from './Notofication.styled';\r\n\r\nfunction Notification({ message }) {\r\n  return <Message>{message}</Message>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              options={this.state}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}