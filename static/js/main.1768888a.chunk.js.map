{"version":3,"sources":["components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/feedbackOptions/FeedbackOptions.jsx","App.js","index.js"],"names":["Section","title","children","Statistics","options","total","positivePercentage","Object","entries","map","key","value","FeedbackOptions","onLeaveFeedback","keys","onClick","App","state","good","neutral","bad","option","setState","prevState","values","this","reduce","acc","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,OCkBQC,MAtBf,YAA6D,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACpC,OACE,8BACE,+BACGC,OAAOC,QAAQJ,GAASK,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YAC3B,+BACGD,EADH,KACUC,IADDD,MAIX,yCAAYL,KACZ,qDAAwBC,EAAxB,cCOOM,MAjBf,YAAwD,IAA7BR,EAA4B,EAA5BA,QAASS,EAAmB,EAAnBA,gBAClC,OACE,8BACGN,OAAOO,KAAKV,GAASK,KAAI,SAAAC,GAAG,OAC3B,wBAAkBK,QAAS,kBAAMF,EAAgBH,IAAjD,SACGA,GADUA,SCAfM,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPP,gBAAkB,SAAAQ,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAASE,EAAUF,GAAU,O,wDAIlC,WACE,OAAOd,OAAOiB,OAAOC,KAAKR,OAAOS,QAAO,SAACC,EAAKhB,GAAN,OAAgBgB,EAAMhB,IAAO,K,6CAGvE,WACE,OAAOiB,KAAKC,MAAOJ,KAAKR,MAAMC,KAAOO,KAAKK,qBAAwB,O,oBAGpE,WACE,OACE,qCACE,cAAC,EAAD,CAAS7B,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBG,QAASqB,KAAKR,MAAOJ,gBAAiBY,KAAKZ,oBAE9D,cAAC,EAAD,CAASZ,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,QAASqB,KAAKR,MACdZ,MAAOoB,KAAKK,qBACZxB,mBAAoBmB,KAAKM,6C,GA/BnBC,aAuCHhB,I,MCxCfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1768888a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ options, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {Object.entries(options).map(([key, value]) => (\r\n          <li key={key}>\r\n            {key}: {value}\r\n          </li>\r\n        ))}\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage} %</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map(key => (\r\n        <button key={key} onClick={() => onLeaveFeedback(key)}>\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/feedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            options={this.state}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}