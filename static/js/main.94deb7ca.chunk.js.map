{"version":3,"sources":["components/Statistics/StatisticList.jsx","components/Statistics/StatisticMarks.jsx","App.js","index.js"],"names":["StatisticList","marks","total","positive","Object","entries","map","key","value","Marks","addMark","keys","onClick","App","state","good","neutral","bad","mark","setState","prevState","values","this","reduce","acc","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAiBeA,MAjBf,YAAoD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACrC,OACE,gCACE,4CACA,+BACGC,OAAOC,QAAQJ,GAAOK,KAAI,mCAAEC,EAAF,KAAOC,EAAP,YACzB,+BACGD,EADH,KACUC,IADDD,MAIX,yCAAYL,KACZ,qDAAwBC,EAAxB,eCEOM,MAbf,YAAoC,IAAnBR,EAAkB,EAAlBA,MAAOS,EAAW,EAAXA,QACtB,OACE,gCACE,4DACCN,OAAOO,KAAKV,GAAOK,KAAI,SAAAC,GAAG,OACzB,wBAAkBK,QAAS,kBAAMF,EAAQH,IAAzC,SACGA,GADUA,UCCfM,E,4MACJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPP,QAAU,SAAAQ,GACR,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,wDAI9B,WACE,OAAOd,OAAOiB,OAAOC,KAAKR,OAAOS,QAAO,SAACC,EAAKhB,GAAN,OAAgBgB,EAAMhB,IAAO,K,6CAGvE,WACE,OAAOiB,KAAKC,MAAOJ,KAAKR,MAAMC,KAAOO,KAAKK,qBAAwB,O,oBAGpE,WACE,OACE,gCACE,cAAC,EAAD,CAAO1B,MAAOqB,KAAKR,MAAOJ,QAASY,KAAKZ,UACxC,cAAC,EAAD,CACET,MAAOqB,KAAKR,MACZZ,MAAOoB,KAAKK,qBACZxB,SAAUmB,KAAKM,2C,GA5BPC,aAmCHhB,I,MCpCfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.94deb7ca.chunk.js","sourcesContent":["function StatisticList({ marks, total, positive }) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        {Object.entries(marks).map(([key, value]) => (\r\n          <li key={key}>\r\n            {key}: {value}\r\n          </li>\r\n        ))}\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positive} %</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticList;\r\n","function Marks({ marks, addMark }) {\r\n  return (\r\n    <div>\r\n      <h2>Please leave your feedback</h2>\r\n      {Object.keys(marks).map(key => (\r\n        <button key={key} onClick={() => addMark(key)}>\r\n          {key}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Marks;\r\n","import './App.css';\nimport React, { Component } from 'react';\n\nimport List from './components/Statistics/StatisticList';\nimport Marks from './components/Statistics/StatisticMarks';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addMark = mark => {\n    this.setState(prevState => ({\n      [mark]: prevState[mark] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <div>\n        <Marks marks={this.state} addMark={this.addMark}></Marks>\n        <List\n          marks={this.state}\n          total={this.countTotalFeedback()}\n          positive={this.countPositiveFeedbackPercentage()}\n        ></List>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}